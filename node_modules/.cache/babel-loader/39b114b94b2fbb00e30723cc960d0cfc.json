{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucas/Documents/pokemoncards/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //css\n\nimport './App.css'; //components\n\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n  _s();\n\n  const [pokemon, setPokemon] = useState([]); //const type = ['normal', 'poison', 'psychic', 'grass', 'ground', 'ice', 'fire', 'rock', 'dragon', 'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n  //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n  //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n\n  const [ty, setButton] = useState([{\n    name: 'normal',\n    active: false\n  }, {\n    name: 'poison',\n    active: false\n  }, {\n    name: 'psychic',\n    active: false\n  }]);\n\n  const toggle = btn => {\n    const copy = [...button];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setButton(copy);\n  }; //async function that fetches all pokemon\n\n\n  useEffect(() => {\n    for (let i = 1; i < 2; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`).then(response => response.json()).then(jsonResponse => setPokemon(prev => [...prev, jsonResponse])).catch(error => console.log(error));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      toggle: toggle,\n      button: button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardTable, {\n      info: pokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2N9MBRsEVkjvMegAh9rIR0+HL1E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lucas/Documents/pokemoncards/src/App.js"],"names":["React","useEffect","useState","Searchbar","CardTable","App","pokemon","setPokemon","ty","setButton","name","active","toggle","btn","copy","button","found","findIndex","element","id","i","fetch","then","response","json","jsonResponse","prev","catch","error","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAIX;AACA;AACA;;AACF,QAAM,CAACM,EAAD,EAAKC,SAAL,IAAkBP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAD,EAAkC;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAlC,EAAmE;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,MAAM,EAAE;AAA1B,GAAnE,CAAD,CAAhC;;AAEA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACtB,UAAMC,IAAI,GAAG,CAAC,GAAGC,MAAJ,CAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,SAAL,CAAeC,OAAO,IAAIA,OAAO,CAACR,IAAR,KAAiBG,GAAG,CAACM,EAA/C,CAAd;AACAL,IAAAA,IAAI,CAACE,KAAD,CAAJ,CAAYL,MAAZ,GAAqB,CAACG,IAAI,CAACE,KAAD,CAAJ,CAAYL,MAAlC;AACAF,IAAAA,SAAS,CAACK,IAAD,CAAT;AACD,GALD,CATa,CAgBb;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,SAAI,IAAImB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBC,MAAAA,KAAK,CAAE,qCAAoCD,CAAE,GAAxC,CAAL,CACEE,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,YAAD,IAAkBlB,UAAU,CAAEmB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,YAAV,CAAX,CAFnC,EAGEE,KAHF,CAGSC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHnB;AAID;AACF,GAPQ,EAON,EAPM,CAAT;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEhB,MAAnB;AAA2B,MAAA,MAAM,EAAEG;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAET;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n//css\nimport './App.css'\n//components\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState([]);\n\n    //const type = ['normal', 'poison', 'psychic', 'grass', 'ground', 'ice', 'fire', 'rock', 'dragon', 'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n    //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n    //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n  const [ty, setButton] = useState([{name: 'normal', active: false}, {name: 'poison', active: false}, {name: 'psychic', active: false}])\n  \n  const toggle = (btn) => {\n    const copy = [...button];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setButton(copy);\n  };\n\n  //async function that fetches all pokemon\n  useEffect(() => {\n    for(let i = 1; i < 2; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemon((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n  return (\n    <div  className=\"App\">\n      <Searchbar toggle={toggle} button={button}/>\n      <CardTable info={pokemon}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}