{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/home/lucas/Documents/pokemoncards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/lucas/Documents/pokemoncards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';//css\nimport'./App.css';//components\nimport Searchbar from'./Components/Searchbar/Searchbar';import CardTable from'./Components/CardTable/CardTable';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokemon=_useState2[0],setPokemon=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pokemonSpecies=_useState4[0],setPokemonSpecies=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),idToShow=_useState6[0],setIdToShow=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),pokemonToShow=_useState8[0],setPokemonToShow=_useState8[1];//'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n//const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n//const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\nvar _useState9=useState([{filter:'type',name:'bug',active:false},{filter:'type',name:'dark',active:false},{filter:'type',name:'dragon',active:false},{filter:'type',name:'electric',active:false},{filter:'type',name:'fairy',active:false},{filter:'type',name:'fire',active:false},{filter:'type',name:'flying',active:false},{filter:'type',name:'ghost',active:false},{filter:'type',name:'grass',active:false},{filter:'type',name:'ground',active:false},{filter:'type',name:'ice',active:false},{filter:'type',name:'normal',active:false},{filter:'type',name:'poison',active:false},{filter:'type',name:'psychic',active:false},{filter:'type',name:'rock',active:false},{filter:'type',name:'steel',active:false},{filter:'type',name:'water',active:false},{filter:'type',name:'fighting',active:false},{filter:'habitat',name:'waters-edge',active:false},{filter:'habitat',name:'sea',active:false},{filter:'habitat',name:'cave',active:false},{filter:'habitat',name:'mountain',active:false},{filter:'habitat',name:'urban',active:false},{filter:'habitat',name:'rough-terrain',active:false},{filter:'habitat',name:'grassland',active:false},{filter:'habitat',name:'forest',active:false},{filter:'habitat',name:'rare',active:false},{filter:'color',name:'red',active:false},{filter:'color',name:'blue',active:false},{filter:'color',name:'yellow',active:false},{filter:'color',name:'green',active:false},{filter:'color',name:'black',active:false},{filter:'color',name:'brown',active:false},{filter:'color',name:'purple',active:false},{filter:'color',name:'gray',active:false},{filter:'color',name:'white',active:false},{filter:'color',name:'pink',active:false}]),_useState10=_slicedToArray(_useState9,2),buttons=_useState10[0],setButtons=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),types=_useState12[0],setTypes=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),colors=_useState14[0],setColors=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),habitats=_useState16[0],setHabitats=_useState16[1];useEffect(function(){updateTypes();updateColors();updateHabitats();updateCards();showCards();});//set types\nvar updateTypes=function updateTypes(){var btns=[];buttons.forEach(function(button){if(button.filter==='type'){btns.push(button);}});setTypes(btns);};//set colors\nvar updateColors=function updateColors(){var btns=[];buttons.forEach(function(button){if(button.filter==='color'){btns.push(button);}});setColors(btns);};//set habitat\nvar updateHabitats=function updateHabitats(){var btns=[];buttons.forEach(function(button){if(button.filter==='habitat'){btns.push(button);}});setHabitats(btns);};var toggleButtons=function toggleButtons(btn){var copy=_toConsumableArray(buttons);var found=copy.findIndex(function(element){return element.name===btn.id;});copy[found].active=!copy[found].active;setButtons(copy);};//async function that fetches all pokemon\nuseEffect(function(){for(var i=1;i<152;i++){fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(i,\"/\")).then(function(response){return response.json();}).then(function(jsonResponse){return setPokemon(function(prev){return[].concat(_toConsumableArray(prev),[jsonResponse]);});}).catch(function(error){return console.log(error);});}},[]);//async function that fetches all pokemon species\nuseEffect(function(){for(var i=1;i<152;i++){fetch(\"https://pokeapi.co/api/v2/pokemon-species/\".concat(i,\"/\")).then(function(response){return response.json();}).then(function(jsonResponse){return setPokemonSpecies(function(prev){return[].concat(_toConsumableArray(prev),[jsonResponse]);});}).catch(function(error){return console.log(error);});}},[]);var updateFilters=function updateFilters(){var filters=[];buttons.forEach(function(button){if(button.active===true){filters.push(button);}});return filters;};var updateCardsTypes=function updateCardsTypes(){var filters=updateFilters();var filteredPokemon=[];for(var i=0;i<filters.length;i++){for(var j=1;j<pokemon.length;j++){for(var k=0;k<pokemon[j].types.length;k++){if(pokemon[j].types[k].type.name===filters[i].name){filteredPokemon.push(pokemon[j].id);}}}}return filteredPokemon;};var updateCardsHabitats=function updateCardsHabitats(){var filters=updateFilters();var filteredPokemon=[];for(var i=0;i<filters.length;i++){for(var j=1;j<pokemonSpecies.length;j++){if(pokemonSpecies[j].habitat.name===filters[i].name){filteredPokemon.push(pokemonSpecies[j].id);}}}return filteredPokemon;};var updateCardsColors=function updateCardsColors(){var filters=updateFilters();var filteredPokemon=[];for(var i=0;i<filters.length;i++){for(var j=1;j<pokemonSpecies.length;j++){if(pokemonSpecies[j].color.name===filters[i].name){filteredPokemon.push(pokemonSpecies[j].id);}}}return filteredPokemon;};var updateCards=function updateCards(){var types=updateCardsTypes();var colors=updateCardsColors();var habitats=updateCardsHabitats();var all=[].concat(_toConsumableArray(types),_toConsumableArray(colors),_toConsumableArray(habitats));var unique=_toConsumableArray(new Set(all));setIdToShow(unique);};var showCards=function showCards(){var array=[];for(var i=0;i<idToShow.length;i++){for(var j=i;j<pokemon.length;j++){if(pokemon[j].id===idToShow[i]){array.push(pokemon[j]);}}}setPokemonToShow(array);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Searchbar,{toggleButtons:toggleButtons,buttons:buttons,colors:colors,habitats:habitats,types:types}),/*#__PURE__*/_jsx(CardTable,{pokemonToShow:pokemonToShow})]});}export default App;","map":{"version":3,"sources":["/home/lucas/Documents/pokemoncards/src/App.js"],"names":["React","useEffect","useState","Searchbar","CardTable","App","pokemon","setPokemon","pokemonSpecies","setPokemonSpecies","idToShow","setIdToShow","pokemonToShow","setPokemonToShow","filter","name","active","buttons","setButtons","types","setTypes","colors","setColors","habitats","setHabitats","updateTypes","updateColors","updateHabitats","updateCards","showCards","btns","forEach","button","push","toggleButtons","btn","copy","found","findIndex","element","id","i","fetch","then","response","json","jsonResponse","prev","catch","error","console","log","updateFilters","filters","updateCardsTypes","filteredPokemon","length","j","k","type","updateCardsHabitats","habitat","updateCardsColors","color","all","unique","Set","array"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n//css\nimport './App.css'\n//components\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonSpecies, setPokemonSpecies] = useState([]);\n  const [idToShow, setIdToShow] = useState([]);\n\n  const [pokemonToShow, setPokemonToShow] = useState([]);\n\n    //'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n    //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n    //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n  const [buttons, setButtons] = useState([\n    {filter: 'type' , name: 'bug', active: false},\n    {filter: 'type' , name: 'dark', active: false},\n    {filter: 'type' , name: 'dragon', active: false},\n    {filter: 'type' , name: 'electric', active: false},\n    {filter: 'type' , name: 'fairy', active: false},\n    {filter: 'type' , name: 'fire', active: false},\n    {filter: 'type' , name: 'flying', active: false},\n    {filter: 'type' , name: 'ghost', active: false},\n    {filter: 'type' , name: 'grass', active: false},\n    {filter: 'type' , name: 'ground', active: false},\n    {filter: 'type' , name: 'ice', active: false},\n    {filter: 'type' , name: 'normal', active: false},\n    {filter: 'type' , name: 'poison', active: false},\n    {filter: 'type' , name: 'psychic', active: false},\n    {filter: 'type' , name: 'rock', active: false},\n    {filter: 'type' , name: 'steel', active: false},\n    {filter: 'type' , name: 'water', active: false},\n    {filter: 'type' , name: 'fighting', active: false},\n    {filter: 'habitat' , name: 'waters-edge', active: false},\n    {filter: 'habitat' , name: 'sea', active: false},\n    {filter: 'habitat' , name: 'cave', active: false},\n    {filter: 'habitat' , name: 'mountain', active: false},\n    {filter: 'habitat' , name: 'urban', active: false},\n    {filter: 'habitat' , name: 'rough-terrain', active: false},\n    {filter: 'habitat' , name: 'grassland', active: false},\n    {filter: 'habitat' , name: 'forest', active: false},\n    {filter: 'habitat' , name: 'rare', active: false},\n    {filter: 'color' , name: 'red', active: false},\n    {filter: 'color' , name: 'blue', active: false},\n    {filter: 'color' , name: 'yellow', active: false},\n    {filter: 'color' , name: 'green', active: false},\n    {filter: 'color' , name: 'black', active: false},\n    {filter: 'color' , name: 'brown', active: false},\n    {filter: 'color' , name: 'purple', active: false},\n    {filter: 'color' , name: 'gray', active: false},\n    {filter: 'color' , name: 'white', active: false},\n    {filter: 'color' , name: 'pink', active: false},\n\n\n\n  ])\n  const [types, setTypes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [habitats, setHabitats] = useState([]);\n\n\n  useEffect(() => {\n    updateTypes();\n    updateColors();\n    updateHabitats();\n    updateCards();\n    showCards();\n  });\n\n  //set types\n  const updateTypes = () => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'type') {\n        btns.push(button)\n      }\n    })\n    setTypes(btns)\n  }\n\n //set colors\n  const updateColors =() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'color') {\n        btns.push(button)\n      }\n    })\n    setColors(btns)\n  }\n\n //set habitat\n  const updateHabitats = () => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'habitat') {\n        btns.push(button)\n      }\n    })\n    setHabitats(btns)\n  }\n\n  const toggleButtons = (btn) => {\n    const copy = [...buttons];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setButtons(copy);\n  };\n\n  //async function that fetches all pokemon\n  useEffect(() => {\n    for(let i = 1; i < 152; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemon((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n  //async function that fetches all pokemon species\n  useEffect(() => {\n    for(let i = 1; i < 152; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemonSpecies((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n\n\n  const updateFilters = () => {\n    let filters = [];\n    buttons.forEach(button => {\n      if(button.active === true) {\n        filters.push(button);\n      }\n    });\n    return filters;\n  }\n\n\n  const updateCardsTypes = () => {\n    const filters = updateFilters();\n    let filteredPokemon = [];\n    for(let i = 0; i < filters.length; i++) {\n      for(let j = 1; j < pokemon.length; j++) {\n        for(let k = 0; k < pokemon[j].types.length; k++) {\n          if(pokemon[j].types[k].type.name === filters[i].name) {\n            filteredPokemon.push(pokemon[j].id);\n          }\n        }\n\n      }\n    }\n    return filteredPokemon;\n  }\n\n\n\n  const updateCardsHabitats = () => {\n    const filters = updateFilters();\n    let filteredPokemon = [];\n    for(let i = 0; i < filters.length; i++) {\n      for(let j = 1; j < pokemonSpecies.length; j++) {\n        if(pokemonSpecies[j].habitat.name === filters[i].name) {\n          filteredPokemon.push(pokemonSpecies[j].id);\n        }\n\n      }\n    }\n    return filteredPokemon;\n  }\n\n\n\n\n  const updateCardsColors = () => {\n    const filters = updateFilters();\n    let filteredPokemon = [];\n    for(let i = 0; i < filters.length; i++) {\n      for(let j = 1; j < pokemonSpecies.length; j++) {\n        if(pokemonSpecies[j].color.name === filters[i].name) {\n          filteredPokemon.push(pokemonSpecies[j].id);\n        }\n\n      }\n    }\n    return filteredPokemon;\n  }\n\n\n\n\n  const updateCards = () => {\n    const types = updateCardsTypes();\n    const colors = updateCardsColors();\n    const habitats = updateCardsHabitats();\n    let all = [...types, ...colors, ...habitats];\n    let unique = [...new Set(all)];\n    setIdToShow(unique);\n  }\n\n\n\n\n  const showCards = () => {\n    let array = [];\n    for(let i = 0; i < idToShow.length; i++) {\n      for(let j = i; j < pokemon.length; j++) {\n        if(pokemon[j].id === idToShow[i]) {\n          array.push(pokemon[j]);\n        }\n      }\n    }\n    setPokemonToShow(array);\n  }\n\n  return (\n    <div  className=\"App\">\n      <Searchbar  toggleButtons={toggleButtons} buttons={buttons} colors={colors} habitats={habitats} types={types}/>\n      <CardTable pokemonToShow={pokemonToShow}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}