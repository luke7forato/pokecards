{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucas/Documents/pokemoncards/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //css\n\nimport './App.css'; //components\n\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n  _s();\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonSpecies, setPokemonSpecies] = useState([]);\n  const [pokemonId, setPokemonId] = useState([]);\n  const [pokemonToShow, setPokemonToShow] = useState([]); //'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n  //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n  //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n\n  const [button, setBUtton] = useState([{\n    filter: 'type',\n    name: 'poison',\n    active: false\n  }, {\n    filter: 'habitat',\n    name: 'grassland',\n    active: false\n  }, {\n    filter: 'color',\n    name: 'green',\n    active: false\n  }]);\n\n  const toggleType = btn => {\n    const copy = [...button];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setType(copy);\n  };\n\n  const toggleHabitat = btn => {\n    const copy = [...habitat];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setHabitat(copy);\n  };\n\n  const toggleColor = btn => {\n    const copy = [...color];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setColor(copy);\n  }; //async function that fetches all pokemon\n\n\n  useEffect(() => {\n    for (let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`).then(response => response.json()).then(jsonResponse => setPokemon(prev => [...prev, jsonResponse])).catch(error => console.log(error));\n    }\n  }, []); //async function that fetches all pokemon species\n\n  useEffect(() => {\n    for (let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${i}/`).then(response => response.json()).then(jsonResponse => setPokemonSpecies(prev => [...prev, jsonResponse])).catch(error => console.log(error));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      toggleType: toggleType,\n      toggleHabitat: toggleHabitat,\n      toggleColor: toggleColor,\n      type: type,\n      color: color,\n      habitat: habitat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardTable, {\n      pokemonToShow: pokemonToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hNnEiRr0fYQil5DOkneRcpBsiCQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lucas/Documents/pokemoncards/src/App.js"],"names":["React","useEffect","useState","Searchbar","CardTable","App","pokemon","setPokemon","pokemonSpecies","setPokemonSpecies","pokemonId","setPokemonId","pokemonToShow","setPokemonToShow","button","setBUtton","filter","name","active","toggleType","btn","copy","found","findIndex","element","id","setType","toggleHabitat","habitat","setHabitat","toggleColor","color","setColor","i","fetch","then","response","json","jsonResponse","prev","catch","error","console","log","type"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n//css\nimport './App.css'\n//components\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonSpecies, setPokemonSpecies] = useState([]);\n  const [pokemonId, setPokemonId] = useState([]);\n\n  const [pokemonToShow, setPokemonToShow] = useState([]);\n\n    //'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n    //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n    //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n  const [button, setBUtton] = useState([{filter: 'type' , name: 'poison', active: false}, {filter: 'habitat' , name: 'grassland', active: false}, {filter: 'color' , name: 'green', active: false}])\n\n\n\n  const toggleType = (btn) => {\n    const copy = [...button];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setType(copy);\n  };\n\n  const toggleHabitat = (btn) => {\n    const copy = [...habitat];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setHabitat(copy);\n  };\n\n  const toggleColor = (btn) => {\n    const copy = [...color];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setColor(copy);\n  };\n\n  //async function that fetches all pokemon\n  useEffect(() => {\n    for(let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemon((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n  //async function that fetches all pokemon species\n  useEffect(() => {\n    for(let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemonSpecies((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n\n\n  return (\n    <div  className=\"App\">\n      <Searchbar toggleType={toggleType} toggleHabitat={toggleHabitat} toggleColor={toggleColor} type={type} color={color} habitat={habitat}/>\n      <CardTable pokemonToShow={pokemonToShow}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}