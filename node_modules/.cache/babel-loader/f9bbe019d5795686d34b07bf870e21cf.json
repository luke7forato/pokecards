{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucas/Documents/pokemoncards/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //css\n\nimport './App.css'; //components\n\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n  _s();\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonSpecies, setPokemonSpecies] = useState([]);\n  const [pokemonId, setPokemonId] = useState([]);\n  const [pokemonToShow, setPokemonToShow] = useState([]); //'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n  //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n  //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n\n  const [buttons, setBUttons] = useState([{\n    filter: 'type',\n    name: 'poison',\n    active: false\n  }, {\n    filter: 'habitat',\n    name: 'grassland',\n    active: false\n  }, {\n    filter: 'color',\n    name: 'green',\n    active: false\n  }, {\n    filter: 'type',\n    name: 'dragon',\n    active: false\n  }]);\n  const [types, setTypes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [habitats, setHabitats] = useState([]); //set types\n\n  useEffect(() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if (button.filter === 'type') {\n        btns.push(button);\n      }\n    });\n    setTypes(btns);\n  }, [buttons]); //set colors\n\n  useEffect(() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if (button.filter === 'color') {\n        btns.push(button);\n      }\n    });\n    setColors(btns);\n  }, [buttons]); //set habitat\n\n  useEffect(() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if (button.filter === 'habitat') {\n        btns.push(button);\n      }\n    });\n    setHabitats(btns);\n  }, [buttons]);\n\n  const toggleButtons = btn => {\n    const copy = [...buttons];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setBUttons(copy);\n  }; //async function that fetches all pokemon\n\n\n  useEffect(() => {\n    for (let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`).then(response => response.json()).then(jsonResponse => setPokemon(prev => [...prev, jsonResponse])).catch(error => console.log(error));\n    }\n  }, []); //async function that fetches all pokemon species\n\n  useEffect(() => {\n    for (let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${i}/`).then(response => response.json()).then(jsonResponse => setPokemonSpecies(prev => [...prev, jsonResponse])).catch(error => console.log(error));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      toggleButtons: toggleButtons,\n      buttons: buttons,\n      colors: colors,\n      habitats: habitats,\n      types: types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardTable, {\n      pokemonToShow: pokemonToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9LGLbmpAfbuFJIMgliaAl/ZHyzo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lucas/Documents/pokemoncards/src/App.js"],"names":["React","useEffect","useState","Searchbar","CardTable","App","pokemon","setPokemon","pokemonSpecies","setPokemonSpecies","pokemonId","setPokemonId","pokemonToShow","setPokemonToShow","buttons","setBUttons","filter","name","active","types","setTypes","colors","setColors","habitats","setHabitats","btns","forEach","button","push","toggleButtons","btn","copy","found","findIndex","element","id","i","fetch","then","response","json","jsonResponse","prev","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n//css\nimport './App.css'\n//components\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonSpecies, setPokemonSpecies] = useState([]);\n  const [pokemonId, setPokemonId] = useState([]);\n\n  const [pokemonToShow, setPokemonToShow] = useState([]);\n\n    //'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n    //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n    //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n  const [buttons, setBUttons] = useState([{filter: 'type' , name: 'poison', active: false}, {filter: 'habitat' , name: 'grassland', active: false}, {filter: 'color' , name: 'green', active: false}, {filter: 'type' , name: 'dragon', active: false}])\n  const [types, setTypes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [habitats, setHabitats] = useState([]);\n\n\n  //set types\n  useEffect(() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'type') {\n        btns.push(button)\n      }\n    })\n    setTypes(btns)\n  }, [buttons])\n\n //set colors\n  useEffect(() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'color') {\n        btns.push(button)\n      }\n    })\n    setColors(btns)\n  }, [buttons])\n\n //set habitat\n  useEffect(() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'habitat') {\n        btns.push(button)\n      }\n    })\n    setHabitats(btns)\n  }, [buttons])\n\n  const toggleButtons = (btn) => {\n    const copy = [...buttons];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setBUttons(copy);\n  };\n\n\n\n  \n\n  //async function that fetches all pokemon\n  useEffect(() => {\n    for(let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemon((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n  //async function that fetches all pokemon species\n  useEffect(() => {\n    for(let i = 1; i < 15; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemonSpecies((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n\n\n  return (\n    <div  className=\"App\">\n      <Searchbar  toggleButtons={toggleButtons} buttons={buttons} colors={colors} habitats={habitats} types={types}/>\n      <CardTable pokemonToShow={pokemonToShow}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}