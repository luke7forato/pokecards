{"version":3,"sources":["Components/Button/Button.js","Components/Field/Field.js","Components/Searchbar/Searchbar.js","Components/Card/Card.js","Components/CardTable/CardTable.js","App.js","index.js"],"names":["Checkbox","props","onClick","name","document","getElementById","toggle","id","className","active","Field","stats","map","stat","type","Searchbar","toggleButtons","colors","types","habitats","Card","src","alt","CardTable","pokemonToShow","element","App","useState","pokemon","setPokemon","pokemonSpecies","setPokemonSpecies","idToShow","setIdToShow","setPokemonToShow","filter","buttons","setButtons","setTypes","setColors","setHabitats","useEffect","updateTypes","updateColors","updateHabitats","updateCards","showCards","btns","forEach","button","push","i","fetch","then","response","json","jsonResponse","prev","catch","error","console","log","updateFilters","filters","filteredPokemon","length","j","k","updateCardsTypes","color","updateCardsColors","habitat","updateCardsHabitats","all","unique","Set","array","btn","copy","found","findIndex","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e1bc817.chunk.js","sourcesContent":["import React from 'react'\n//css\nimport './Button.css'\n\nexport default function Checkbox(props) {\n    \n    const handleClick = () => {\n        const name = document.getElementById(props.name);\n        props.toggle(name);\n    }\n\n    return (\n        <div>\n            <button onClick={handleClick} id={props.name} className = {props.active ? 'active' : 'unactive'}>\n                {props.name}\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n//css\nimport './Field.css'\n//componenets\nimport Button from '../Button/Button'\n\n\nexport default function Field(props) {\n\n    \n\n    return (\n        <div className=\"Field\">\n            {props.stats.map((stat) => {\n                return <Button toggle={props.toggle} type={stat.type} active={stat.active} name={stat.name} key={stat.name}/>\n            })}\n        </div>\n        \n    )\n}\n","import React from 'react'\n//css\nimport './Searchbar.css'\n//components\nimport Field from '../Field/Field'\n\nexport default function Searchbar(props) {\n\n    return (\n        <div className=\"Searchbar\">\n            <Field toggle={props.toggleButtons} stats={props.colors}/> \n            <Field toggle={props.toggleButtons} stats={props.types}/> \n            <Field toggle={props.toggleButtons} stats={props.habitats}/> \n        </div>\n    )\n}\n","import React from 'react'\n//css\nimport './Card.css'\n\nexport default function Card(props) {\n\n    return (\n        <div className=\"Card\">\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${props.id}.png`} alt={props.name}/>\n            <h2>{props.name}</h2>\n            <div className=\"span\">\n                {props.types.map((type) => {\n                    return <span key={type.type.name} className={type.type.name}>{type.type.name}</span>\n                })}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n//css\nimport './CardTable.css'\n//componenets\nimport Card from '../Card/Card'\n\nexport default function CardTable(props) {\n\n    return (\n        <div className=\"CardTable\">\n            {\n                props.pokemonToShow.map((element) => {\n                    return <Card \n                    name={element.name}\n                    id={element.id}\n                    key={element.id}\n                    types={element.types}\n                    />\n                })\n            }\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react';\n//css\nimport './App.css'\n//components\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport CardTable from './Components/CardTable/CardTable';\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonSpecies, setPokemonSpecies] = useState([]);\n  const [idToShow, setIdToShow] = useState([]);\n\n  const [pokemonToShow, setPokemonToShow] = useState([]);\n\n    //'water', 'bug', 'dark', 'fighting', 'ghost', 'steel', 'flying', 'electric', 'fairy'];\n    //const habitat = ['grassland', 'forest', 'waters edge', 'sea', 'cave', 'mountain', 'rough-terrain', 'urban', 'rare'];\n    //const color = ['red', 'blue', 'yellow', 'green', 'black', 'brown', 'purple', 'gray', 'white', 'pink'];\n  const [buttons, setButtons] = useState([\n    {filter: 'type' , name: 'bug', active: false},\n    {filter: 'type' , name: 'dark', active: false},\n    {filter: 'type' , name: 'dragon', active: false},\n    {filter: 'type' , name: 'electric', active: false},\n    {filter: 'type' , name: 'fairy', active: false},\n    {filter: 'type' , name: 'fire', active: false},\n    {filter: 'type' , name: 'flying', active: false},\n    {filter: 'type' , name: 'ghost', active: false},\n    {filter: 'type' , name: 'grass', active: false},\n    {filter: 'type' , name: 'ground', active: false},\n    {filter: 'type' , name: 'ice', active: false},\n    {filter: 'type' , name: 'normal', active: false},\n    {filter: 'type' , name: 'poison', active: false},\n    {filter: 'type' , name: 'psychic', active: false},\n    {filter: 'type' , name: 'rock', active: false},\n    {filter: 'type' , name: 'steel', active: false},\n    {filter: 'type' , name: 'water', active: false},\n    {filter: 'type' , name: 'fighting', active: false},\n    {filter: 'habitat' , name: 'waters-edge', active: false},\n    {filter: 'habitat' , name: 'sea', active: false},\n    {filter: 'habitat' , name: 'cave', active: false},\n    {filter: 'habitat' , name: 'mountain', active: false},\n    {filter: 'habitat' , name: 'urban', active: false},\n    {filter: 'habitat' , name: 'rough-terrain', active: false},\n    {filter: 'habitat' , name: 'grassland', active: false},\n    {filter: 'habitat' , name: 'forest', active: false},\n    {filter: 'habitat' , name: 'rare', active: false},\n    {filter: 'color' , name: 'red', active: false},\n    {filter: 'color' , name: 'blue', active: false},\n    {filter: 'color' , name: 'yellow', active: false},\n    {filter: 'color' , name: 'green', active: false},\n    {filter: 'color' , name: 'black', active: false},\n    {filter: 'color' , name: 'brown', active: false},\n    {filter: 'color' , name: 'purple', active: false},\n    {filter: 'color' , name: 'gray', active: false},\n    {filter: 'color' , name: 'white', active: false},\n    {filter: 'color' , name: 'pink', active: false},\n\n\n\n  ])\n  const [types, setTypes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [habitats, setHabitats] = useState([]);\n\n\n  useEffect(() => {\n    updateTypes();\n    updateColors();\n    updateHabitats();\n    updateCards();\n    showCards();\n  });\n\n  //set types\n  const updateTypes = () => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'type') {\n        btns.push(button)\n      }\n    })\n    setTypes(btns)\n  }\n\n //set colors\n  const updateColors =() => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'color') {\n        btns.push(button)\n      }\n    })\n    setColors(btns)\n  }\n\n //set habitat\n  const updateHabitats = () => {\n    let btns = [];\n    buttons.forEach(button => {\n      if(button.filter === 'habitat') {\n        btns.push(button)\n      }\n    })\n    setHabitats(btns)\n  }\n\n  const toggleButtons = (btn) => {\n    const copy = [...buttons];\n    const found = copy.findIndex(element => element.name === btn.id);\n    copy[found].active = !copy[found].active;\n    setButtons(copy);\n  };\n\n  //async function that fetches all pokemon\n  useEffect(() => {\n    for(let i = 1; i < 152; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemon((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n  //async function that fetches all pokemon species\n  useEffect(() => {\n    for(let i = 1; i < 152; i++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${i}/`\n      ).then((response) => response.json()\n      ).then((jsonResponse) => setPokemonSpecies((prev) => [...prev, jsonResponse])\n      ).catch((error) => console.log(error));\n    }\n  }, []);\n\n\n\n\n  const updateFilters = () => {\n    let filters = [];\n    buttons.forEach(button => {\n      if(button.active === true) {\n        filters.push(button);\n      }\n    });\n    return filters;\n  }\n\n\n  const updateCardsTypes = () => {\n    const filters = updateFilters();\n    let filteredPokemon = [];\n    for(let i = 0; i < filters.length; i++) {\n      for(let j = 1; j < pokemon.length; j++) {\n        for(let k = 0; k < pokemon[j].types.length; k++) {\n          if(pokemon[j].types[k].type.name === filters[i].name) {\n            filteredPokemon.push(pokemon[j].id);\n          }\n        }\n\n      }\n    }\n    return filteredPokemon;\n  }\n\n\n\n  const updateCardsHabitats = () => {\n    const filters = updateFilters();\n    let filteredPokemon = [];\n    for(let i = 0; i < filters.length; i++) {\n      for(let j = 1; j < pokemonSpecies.length; j++) {\n        if(pokemonSpecies[j].habitat.name === filters[i].name) {\n          filteredPokemon.push(pokemonSpecies[j].id);\n        }\n\n      }\n    }\n    return filteredPokemon;\n  }\n\n\n\n\n  const updateCardsColors = () => {\n    const filters = updateFilters();\n    let filteredPokemon = [];\n    for(let i = 0; i < filters.length; i++) {\n      for(let j = 1; j < pokemonSpecies.length; j++) {\n        if(pokemonSpecies[j].color.name === filters[i].name) {\n          filteredPokemon.push(pokemonSpecies[j].id);\n        }\n\n      }\n    }\n    return filteredPokemon;\n  }\n\n\n\n\n  const updateCards = () => {\n    const types = updateCardsTypes();\n    const colors = updateCardsColors();\n    const habitats = updateCardsHabitats();\n    let all = [...types, ...colors, ...habitats];\n    let unique = [...new Set(all)];\n    setIdToShow(unique);\n  }\n\n\n\n\n  const showCards = () => {\n    let array = [];\n    for(let i = 0; i < idToShow.length; i++) {\n      for(let j = i; j < pokemon.length; j++) {\n        if(pokemon[j].id === idToShow[i]) {\n          array.push(pokemon[j]);\n        }\n      }\n    }\n    setPokemonToShow(array);\n  }\n\n  return (\n    <div  className=\"App\">\n      <Searchbar  toggleButtons={toggleButtons} buttons={buttons} colors={colors} habitats={habitats} types={types}/>\n      <CardTable pokemonToShow={pokemonToShow}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}